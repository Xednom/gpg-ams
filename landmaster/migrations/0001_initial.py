# Generated by Django 2.1.2 on 2019-05-16 02:04

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('fillables', '0002_added_va'),
    ]

    operations = [
        migrations.CreateModel(
            name='DueDiligence',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_requested', models.DateField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=250, null=True)),
                ('company_owner_or_requestor', models.CharField(blank=True, max_length=250, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('customer_care_specialist', models.CharField(blank=True, help_text='Customer Care Specialist or Operator ID, Assessors/County', max_length=250, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=250, null=True, verbose_name="Owner's name")),
                ('parcel_number', models.CharField(blank=True, max_length=250, null=True)),
                ('account_number', models.CharField(blank=True, max_length=259, null=True)),
                ('property_address', models.TextField(blank=True, null=True)),
                ('county', models.CharField(blank=True, max_length=250, null=True)),
                ('lot_number', models.CharField(blank=True, max_length=250, null=True)),
                ('legal_description', models.TextField(blank=True, null=True)),
                ('parcel_size', models.CharField(blank=True, max_length=250, null=True)),
                ('gps_coordinates', models.CharField(blank=True, max_length=250, null=True)),
                ('gps_coordinates_4_corners', models.CharField(blank=True, max_length=250, null=True)),
                ('google_map_link', models.URLField(blank=True, max_length=250, null=True)),
                ('elevation', models.CharField(blank=True, max_length=250, null=True)),
                ('assessed_value', models.CharField(blank=True, max_length=250, null=True)),
                ('access_to_property', models.CharField(blank=True, max_length=250, null=True, verbose_name='Access to Property (Dirt or Paved)')),
                ('closest_major_city', models.CharField(blank=True, max_length=250, null=True)),
                ('closest_small_town', models.CharField(blank=True, max_length=250, null=True)),
                ('nearby_attractions', models.CharField(blank=True, max_length=250, null=True)),
                ('assessor_website', models.URLField(blank=True, max_length=250, null=True)),
                ('treasurer_website', models.URLField(blank=True, max_length=250, null=True)),
                ('recorder_clerk_website', models.URLField(blank=True, max_length=250, null=True, verbose_name='Recorder/Clerk Website')),
                ('zoning_department_website', models.URLField(blank=True, max_length=250, null=True)),
                ('gis_website', models.URLField(blank=True, max_length=250, null=True)),
                ('cad_website', models.URLField(blank=True, max_length=250, null=True)),
                ('planning_department_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('recorder_clerk_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('tax_office_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('assessors_office_contact', models.CharField(blank=True, max_length=250, null=True, verbose_name="Assessor's Office Contact")),
                ('back_taxes', models.CharField(blank=True, max_length=250, null=True, verbose_name='Back Taxes owed? If so, amount owed.')),
                ('tax_liens', models.CharField(blank=True, max_length=250, null=True, verbose_name='Tax Liens? If so, amount owed.')),
                ('annual_property_taxes', models.CharField(blank=True, max_length=250, null=True)),
                ('is_property_part_of_an_hoa', models.CharField(blank=True, max_length=250, null=True)),
                ('how_much_dues', models.CharField(blank=True, max_length=250, null=True, verbose_name='Is so how much are the dues?')),
                ('zoning', models.CharField(blank=True, max_length=250, null=True)),
                ('terrian_type', models.CharField(blank=True, max_length=250, null=True)),
                ('property_use_code', models.CharField(blank=True, max_length=250, null=True)),
                ('what_can_be_built', models.TextField(blank=True, null=True, verbose_name='What can be build on the property?')),
                ('time_limit_to_build', models.CharField(blank=True, max_length=250, null=True)),
                ('can_camp', models.CharField(blank=True, max_length=250, null=True, verbose_name='Can you camp on the property?')),
                ('notes_on_camping', models.TextField(blank=True, null=True)),
                ('rv_allowed', models.CharField(blank=True, max_length=250, null=True, verbose_name="RV's allowed on the property?")),
                ('note_on_rv', models.TextField(blank=True, null=True, verbose_name="Note's on RV's")),
                ('mobile_homes', models.CharField(blank=True, max_length=250, null=True, verbose_name='Mobile homes allowed on property?')),
                ('notes_on_mobile_homes', models.TextField(blank=True, null=True)),
                ('is_property_flood_zone_area', models.CharField(blank=True, max_length=250, null=True, verbose_name='Is the property in the flood zone area?')),
                ('water', models.CharField(blank=True, max_length=250, null=True, verbose_name='Water?')),
                ('sewer_or_septic', models.CharField(blank=True, choices=[('Sewer', 'Sewer'), ('Septic', 'Septic')], max_length=100, null=True)),
                ('power', models.CharField(blank=True, max_length=250, null=True, verbose_name='Power(electricity)?')),
                ('gas', models.CharField(blank=True, max_length=250, null=True, verbose_name='Gas?')),
                ('waste', models.CharField(blank=True, max_length=250, null=True, verbose_name='Waste?')),
                ('date_completed', models.DateField(blank=True, null=True)),
                ('notes_from_the_client', models.TextField(blank=True, null=True)),
                ('notes_from_the_quality_specialist', models.TextField(blank=True, null=True)),
                ('notes_from_the_virtual_assistant', models.TextField(blank=True, null=True)),
                ('notes_on_zoning', models.TextField(blank=True, null=True)),
                ('notes_on_utilities', models.TextField(blank=True, null=True)),
                ('notes_on_tax', models.TextField(blank=True, null=True)),
                ('notes_on_legal_description', models.TextField(blank=True, null=True)),
                ('notes_on_deeds', models.TextField(blank=True, null=True)),
                ('total_minutes_hours_duration', models.CharField(blank=True, max_length=150, null=True, verbose_name='Total Minutes/hours duration')),
                ('attachments', models.URLField(blank=True, null=True)),
                ('status_of_dd', models.CharField(blank=True, choices=[('Sent to Project Manager', 'Sent to Project Manager'), ('Project Managers Review', 'Project Managers Review'), ('Sent to VA', 'Sent to VA'), ('VA Processing', 'VA Processing'), ('Sent to Quality Specialist', 'Sent to Quality Specialist'), ('Quality Specialist Checking', 'Quality Specialist Checking'), ('Submitted to the Client', 'Submitted to the Client'), ('Approved by the Client', 'Approved by the Client')], max_length=150, null=True)),
                ('date_completed_initial_dd_time_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_initial_dd_time_out', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_initial_dd_total_time', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date_completed_tax_data_time_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_tax_data_time_out', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_tax_data_total_time', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_completed_zoning_data_time_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_zoning_data_time_out', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_zoning_data_total_time', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date_completed_utilities_time_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_utilities_time_out', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_utilities_total_time', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date_completed_other_requests_time_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_other_requests_time_out', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_completed_other_requests_total_time', models.DecimalField(decimal_places=2, max_digits=6)),
                ('dd_va_assigned_call_outs_other_requests', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='other', to='fillables.VirtualAssistant', verbose_name='VA Assigned for call outs on Other Requests')),
                ('dd_va_assigned_call_outs_tax_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tax', to='fillables.VirtualAssistant', verbose_name='VA Assigned for call outs for Tax data')),
                ('dd_va_assigned_call_outs_utilities_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='utilities', to='fillables.VirtualAssistant', verbose_name='VA Assigned for call outs on Utilities data')),
                ('dd_va_assigned_call_outs_zoning_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='zoning', to='fillables.VirtualAssistant', verbose_name='VA Assigned for call outs on Zoning data')),
                ('dd_va_assigned_initial_data', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='initial', to='fillables.VirtualAssistant', verbose_name='VA assigned for gathering initial data.')),
                ('project_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='fillables.ProjectManager')),
            ],
            options={
                'ordering': ('date_requested',),
            },
        ),
        migrations.CreateModel(
            name='DueDiligencesCleared',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_call', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('client_full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('client_company_name', models.CharField(blank=True, max_length=150, null=True)),
                ('apn', models.CharField(blank=True, max_length=150, null=True)),
                ('call_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('call_out', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('total_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('department_calling_about', models.CharField(blank=True, max_length=150, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=150, null=True)),
                ('operators_details', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer_service_representative', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Due Diligences Cleared Information',
                'verbose_name_plural': 'Due Diligences Cleared Informations',
                'ordering': ['-date_of_call'],
            },
        ),
    ]
