# Generated by Django 2.1.2 on 2019-06-11 14:29

from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DueDiligence',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_requested', models.DateField(blank=True, null=True)),
                ('company_name', models.CharField(blank=True, max_length=250, null=True)),
                ('company_owner_or_requestor', models.CharField(blank=True, max_length=250, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('county_operator_details', models.CharField(blank=True, help_text="County Operator's Details", max_length=250, null=True)),
                ('owner_name', models.CharField(blank=True, max_length=250, null=True, verbose_name="Owner's name")),
                ('parcel_number', models.CharField(blank=True, max_length=250, null=True)),
                ('account_number', models.CharField(blank=True, max_length=259, null=True)),
                ('property_address', models.TextField(blank=True, null=True)),
                ('county', models.CharField(blank=True, max_length=250, null=True)),
                ('lot_number', models.CharField(blank=True, max_length=250, null=True)),
                ('legal_description', models.TextField(blank=True, null=True)),
                ('parcel_size', models.CharField(blank=True, max_length=250, null=True)),
                ('gps_coordinates', models.CharField(blank=True, max_length=250, null=True, verbose_name='GPS Coordinates')),
                ('gps_coordinates_4_corners', models.CharField(blank=True, max_length=250, null=True, verbose_name='GPS Coordinates 4 Corners')),
                ('google_map_link', models.URLField(blank=True, max_length=250, null=True)),
                ('elevation', models.CharField(blank=True, max_length=250, null=True)),
                ('assessed_value', models.CharField(blank=True, max_length=250, null=True)),
                ('closest_major_city', models.CharField(blank=True, max_length=250, null=True)),
                ('closest_small_town', models.CharField(blank=True, max_length=250, null=True)),
                ('nearby_attractions', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nearby Attractions and Amenities')),
                ('assessor_website', models.URLField(blank=True, max_length=250, null=True)),
                ('treasurer_website', models.URLField(blank=True, max_length=250, null=True)),
                ('recorder_clerk_website', models.URLField(blank=True, max_length=250, null=True, verbose_name='Recorder/Clerk Website')),
                ('zoning_department_website', models.URLField(blank=True, max_length=250, null=True)),
                ('gis_website', models.URLField(blank=True, max_length=250, null=True, verbose_name='GIS Website')),
                ('cad_website', models.URLField(blank=True, max_length=250, null=True, verbose_name='CAD Website')),
                ('planning_department_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('recorder_clerk_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('tax_office_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('assessors_office_contact', models.CharField(blank=True, max_length=250, null=True, verbose_name="Assessor's Office Contact")),
                ('utility_department_number', models.CharField(blank=True, max_length=150, null=True)),
                ('water_company_number', models.CharField(blank=True, max_length=150, null=True)),
                ('electricity_company_number', models.CharField(blank=True, max_length=150, null=True)),
                ('propane_gas_company_number', models.CharField(blank=True, max_length=150, null=True)),
                ('natural_gas_company_number', models.CharField(blank=True, max_length=150, null=True)),
                ('back_taxes', models.CharField(blank=True, help_text='Is there any back Taxes owed in the property? If yes, how much is the amount owed...', max_length=250, null=True, verbose_name='Back Taxes owed?')),
                ('tax_liens', models.CharField(blank=True, help_text='Is there any Tax Liens? If yes, how much is the amount owed...', max_length=250, null=True, verbose_name='Tax Liens?')),
                ('annual_property_taxes', models.CharField(blank=True, help_text='What is the Annual Property Tax?', max_length=250, null=True)),
                ('is_property_part_of_an_hoa', models.CharField(blank=True, help_text='Is the property part of an HOA?', max_length=250, null=True)),
                ('how_much_dues', models.CharField(blank=True, help_text='If yes, how much being the dues?', max_length=250, null=True, verbose_name='how much are the dues?')),
                ('zoning', models.CharField(blank=True, help_text='What is the zoning of the property?', max_length=250, null=True)),
                ('terrian_type', models.CharField(blank=True, help_text='Is it flat or slope? etc.', max_length=250, null=True)),
                ('property_use_code', models.CharField(blank=True, max_length=250, null=True)),
                ('what_can_be_built', models.TextField(blank=True, help_text='What can be built on the property? Indicate different types of homes that we can build on the lots.', null=True, verbose_name='What can be build on the property?')),
                ('time_limit_to_build', models.CharField(blank=True, help_text='Is there any time limit to build?', max_length=250, null=True)),
                ('can_camp', models.CharField(blank=True, help_text='If we buy this property can the owner camp there?', max_length=250, null=True, verbose_name='Can you camp on the property?')),
                ('notes_on_camping', models.TextField(blank=True, help_text='Notes on Camping?', null=True)),
                ('rv_allowed', models.CharField(blank=True, help_text="Is RV's allowed on the property? Please ask if there are restrictions.", max_length=250, null=True, verbose_name="RV's allowed on the property?")),
                ('note_on_rv', models.TextField(blank=True, null=True, verbose_name="Note's on RV's")),
                ('mobile_homes', models.CharField(blank=True, help_text='Are mobile homes allowed on the property? Please ask if there is restrictions.', max_length=250, null=True, verbose_name='Mobile homes allowed on property?')),
                ('notes_on_mobile_homes', models.TextField(blank=True, help_text='Notes on mobile homes?', null=True)),
                ('is_property_flood_zone_area', models.CharField(blank=True, help_text='Is the property in a flood zone area?', max_length=250, null=True, verbose_name='Flood zone area?')),
                ('access_to_property', models.CharField(blank=True, help_text='Dirt / Paved or No Access', max_length=250, null=True, verbose_name='Access to Property')),
                ('water', models.CharField(blank=True, max_length=250, null=True, verbose_name='Water?')),
                ('sewer_or_septic', models.CharField(blank=True, choices=[('Sewer', 'Sewer'), ('Septic', 'Septic')], max_length=100, null=True)),
                ('power', models.CharField(blank=True, max_length=250, null=True, verbose_name='Power(electricity)?')),
                ('gas', models.CharField(blank=True, max_length=250, null=True, verbose_name='Gas?')),
                ('waste', models.CharField(blank=True, max_length=250, null=True, verbose_name='Waste?')),
                ('notes_from_the_client', models.TextField(blank=True, null=True, verbose_name='Client instructions')),
                ('notes_from_the_quality_specialist', models.TextField(blank=True, null=True, verbose_name='Quality Specialists Evaluation')),
                ('notes_from_the_virtual_assistant', models.TextField(blank=True, null=True, verbose_name='VA Notes')),
                ('notes_on_zoning', models.TextField(blank=True, null=True, verbose_name='Zoning Memo')),
                ('notes_on_utilities', models.TextField(blank=True, null=True, verbose_name='Utilities Memo')),
                ('notes_on_tax', models.TextField(blank=True, null=True, verbose_name='Tax Memo')),
                ('total_minutes_hours_duration', models.CharField(blank=True, max_length=150, null=True, verbose_name='Total Minutes/hours duration')),
                ('attachments', models.URLField(blank=True, null=True)),
                ('initial_due_diligence_completion', models.DateField(blank=True, null=True, verbose_name='Date of Completion – Initial Data')),
                ('tax_data_completion', models.DateField(blank=True, null=True, verbose_name='Date of Completion – Tax Data')),
                ('zoning_data_completion', models.DateField(blank=True, null=True, verbose_name='Date of Completion – Zoning Data')),
                ('utilities_data_completion', models.DateField(blank=True, null=True, verbose_name='Date of Completion – Utilities Data')),
                ('other_requests_completion', models.DateField(blank=True, null=True, verbose_name='Date of Completion – Other Requests')),
                ('date_of_completion', models.DateField(blank=True, help_text='Date of Completion Submitted to the Client- Overall Due Diligence', null=True)),
                ('operator_details_tax_data', models.TextField(blank=True, null=True, verbose_name='County Operator Details - Tax Data')),
                ('operator_details_zoning_data', models.TextField(blank=True, null=True, verbose_name='County Operator Details - Zoning Data')),
                ('operator_details_utilities_data', models.TextField(blank=True, null=True, verbose_name='County Operator Details - Utilities Data')),
                ('operator_details_other_requests', models.TextField(blank=True, null=True, verbose_name='County Operator Details - Other Requests')),
                ('status_initial_data', models.CharField(blank=True, choices=[('Sent to Project Manager', 'Sent to Project Manager'), ('Project Managers Review', 'Project Managers Review'), ('Sent to VA', 'Sent to VA'), ('VA Processing', 'VA Processing'), ('Sent to Quality Specialist', 'Sent to Quality Specialist'), ('Quality Specialist Checking', 'Quality Specialist Checking'), ('Submitted to the Client', 'Submitted to the Client'), ('Approved by the Client', 'Approved by the Client')], max_length=150, null=True, verbose_name='Due Diligence Status for Initial Data')),
                ('status_tax_data', models.CharField(blank=True, choices=[('Sent to Project Manager', 'Sent to Project Manager'), ('Project Managers Review', 'Project Managers Review'), ('Sent to VA', 'Sent to VA'), ('VA Processing', 'VA Processing'), ('Sent to Quality Specialist', 'Sent to Quality Specialist'), ('Quality Specialist Checking', 'Quality Specialist Checking'), ('Submitted to the Client', 'Submitted to the Client'), ('Approved by the Client', 'Approved by the Client')], max_length=150, null=True, verbose_name='Due Diligence Status for Tax Data')),
                ('status_zoning_data', models.CharField(blank=True, choices=[('Sent to Project Manager', 'Sent to Project Manager'), ('Project Managers Review', 'Project Managers Review'), ('Sent to VA', 'Sent to VA'), ('VA Processing', 'VA Processing'), ('Sent to Quality Specialist', 'Sent to Quality Specialist'), ('Quality Specialist Checking', 'Quality Specialist Checking'), ('Submitted to the Client', 'Submitted to the Client'), ('Approved by the Client', 'Approved by the Client')], max_length=150, null=True, verbose_name='Due Diligence Status for Zoning Data')),
                ('status_utilities_data', models.CharField(blank=True, choices=[('Sent to Project Manager', 'Sent to Project Manager'), ('Project Managers Review', 'Project Managers Review'), ('Sent to VA', 'Sent to VA'), ('VA Processing', 'VA Processing'), ('Sent to Quality Specialist', 'Sent to Quality Specialist'), ('Quality Specialist Checking', 'Quality Specialist Checking'), ('Submitted to the Client', 'Submitted to the Client'), ('Approved by the Client', 'Approved by the Client')], max_length=150, null=True, verbose_name='Due Diligence Status for Utilities Data')),
                ('status_other_requests', models.CharField(blank=True, choices=[('Sent to Project Manager', 'Sent to Project Manager'), ('Project Managers Review', 'Project Managers Review'), ('Sent to VA', 'Sent to VA'), ('VA Processing', 'VA Processing'), ('Sent to Quality Specialist', 'Sent to Quality Specialist'), ('Quality Specialist Checking', 'Quality Specialist Checking'), ('Submitted to the Client', 'Submitted to the Client'), ('Approved by the Client', 'Approved by the Client')], max_length=150, null=True, verbose_name='Due Diligence Status for Other Requests')),
                ('status_of_dd', models.CharField(blank=True, choices=[('Sent to Project Manager', 'Sent to Project Manager'), ('Project Managers Review', 'Project Managers Review'), ('Sent to VA', 'Sent to VA'), ('VA Processing', 'VA Processing'), ('Sent to Quality Specialist', 'Sent to Quality Specialist'), ('Quality Specialist Checking', 'Quality Specialist Checking'), ('Submitted to the Client', 'Submitted to the Client'), ('Approved by the Client', 'Approved by the Client')], max_length=150, null=True, verbose_name='Due Diligence Status')),
                ('level_of_urgency', models.CharField(blank=True, choices=[('High', 'High'), ('Average', 'Average'), ('Low', 'Low')], max_length=150, null=True)),
            ],
            options={
                'ordering': ('date_requested',),
            },
        ),
        migrations.CreateModel(
            name='DueDiligencesCleared',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_of_call', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('client_full_name', models.CharField(blank=True, max_length=150, null=True)),
                ('client_company_name', models.CharField(blank=True, max_length=150, null=True)),
                ('apn', models.CharField(blank=True, max_length=150, null=True)),
                ('call_in', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('call_out', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('total_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('department_calling_about', models.CharField(blank=True, max_length=150, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=150, null=True)),
                ('operators_details', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('customer_service_representative', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Due Diligence Call Tracking Report',
                'verbose_name_plural': 'Due Diligence Call Tracking Reports',
                'ordering': ['-date_of_call'],
            },
        ),
    ]
