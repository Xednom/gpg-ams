# Generated by Django 2.1.2 on 2019-06-11 14:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('fillables', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_staffs', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'List of Username',
                'verbose_name_plural': 'List of Usernames',
                'ordering': ['notes'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ChannelOfCommunications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_channel', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name': 'Channel of Communication',
                'verbose_name_plural': 'Channel of Communications',
            },
        ),
        migrations.CreateModel(
            name='ClientProfiling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind_of_client', models.CharField(max_length=150)),
                ('category', models.CharField(blank=True, choices=[('High', 'High'), ('Average', 'Average'), ('Low', 'Low')], max_length=150, null=True)),
                ('influence', models.CharField(blank=True, max_length=250, null=True)),
                ('current_job_position', models.CharField(blank=True, max_length=150, null=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('skype_account', models.CharField(blank=True, max_length=150, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=150, null=True)),
                ('viber', models.CharField(blank=True, max_length=150, null=True)),
                ('line', models.CharField(blank=True, max_length=150, null=True)),
                ('others', models.CharField(blank=True, max_length=150, null=True)),
                ('qualified_for_testimony', models.BooleanField(default=False)),
                ('notes_on_disputes', models.TextField(blank=True, null=True)),
                ('testimony_notes', models.TextField(blank=True, null=True)),
                ('feedback_in_operation', models.TextField(blank=True, null=True)),
                ('feedback_in_quality', models.TextField(blank=True, null=True)),
                ('notes', models.TextField()),
            ],
            options={
                'verbose_name': 'Client Profile',
                'verbose_name_plural': 'Client Profiles',
                'ordering': ['kind_of_client'],
            },
        ),
        migrations.CreateModel(
            name='Clients',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('company_name', models.CharField(max_length=150)),
                ('date_signed_up', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('client_control_number', models.CharField(blank=True, max_length=150, null=True)),
                ('referred_by', models.CharField(blank=True, max_length=150, null=True)),
                ('lead_source', models.CharField(blank=True, max_length=150, null=True)),
                ('task_enroute', models.CharField(blank=True, max_length=150, null=True)),
                ('type_of_task', models.TextField(blank=True, null=True)),
                ('internal_folder_link_1', models.URLField(blank=True, null=True)),
                ('internal_folder_link_2', models.URLField(blank=True, null=True)),
                ('internal_folder_link_3', models.URLField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=150, null=True)),
                ('company_category', models.CharField(blank=True, choices=[('landmaster.us', 'landmaster.us'), ('gpgcorporations.com', 'gpgcorporations.com'), ('callme.com.ph', 'callme.com.ph'), ('virtualExpressServices.com', 'virtualExpressServices.com'), ('creatif-designs.com', 'creatif-designs.com'), ('vacantpropertiesglobal.com', 'vacantpropertiesglobal.com')], max_length=150, null=True)),
                ('status', models.CharField(blank=True, choices=[('New', 'New'), ('Active', 'Active'), ('Inactive within 30 days', 'Inactive within 30 days'), ('Inactive within 90 days', 'Inactive within 90 days'), ('Inactive within 120 days', 'Inactive within 120 days'), ('Sign out', 'Sign out'), ('Terminated', 'Terminated'), ('Others', 'Others')], default='New', max_length=150, null=True)),
                ('assigned_pm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='fillables.ProjectManager', verbose_name='Assigned PM')),
                ('assigned_va', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='fillables.VirtualAssistant', verbose_name='Assigned VA')),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'List of Client',
                'verbose_name_plural': 'List of Clients',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients')),
            ],
        ),
        migrations.CreateModel(
            name='PaypalEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paypal_email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients')),
            ],
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default='My Name', max_length=500)),
                ('middle_name', models.CharField(blank=True, default='middle name', max_length=150, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('SSS_number', models.CharField(blank=True, max_length=250, null=True)),
                ('TIN_number', models.CharField(blank=True, max_length=250, null=True)),
                ('pag_ibig_number', models.CharField(blank=True, max_length=250, null=True)),
                ('philhealth', models.CharField(blank=True, max_length=250, null=True, verbose_name='Philhealth Number')),
                ('position', models.CharField(blank=True, choices=[('Senior Operations Managers', 'Senior Operations Managers'), ('Project Managers', 'Project Managers'), ('Team Leads', 'Team Leads'), ('General Administrative Support', 'General Administrative Support'), ('Executive Assistant', 'Executive Assistant'), ('Human Resource Specialists', 'Human Resource Specialists')], max_length=150, null=True)),
                ('id_number', models.CharField(blank=True, max_length=250, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('blood_type', models.CharField(blank=True, max_length=150, null=True)),
                ('mother_full_maiden_name', models.CharField(blank=True, max_length=250, null=True)),
                ('father_full_name', models.CharField(blank=True, max_length=250, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=250, null=True)),
                ('emergency_contact_number', models.CharField(blank=True, max_length=250, null=True)),
                ('relationship_to_the_emergency_contact_person', models.CharField(blank=True, max_length=200, null=True)),
                ('residential_address', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('REGULAR', 'Regular'), ('PROBATIONARY', 'Probationary'), ('INACTIVE', 'Inactive')], max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=150, null=True)),
                ('bank_account_name', models.CharField(blank=True, max_length=150, null=True)),
                ('bank_type', models.CharField(blank=True, max_length=150, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=150, null=True)),
                ('base_pay', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('employer_share_sss', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employer share(SSS)')),
                ('employer_share_ec_sss', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employer share EC(SSS)')),
                ('employer_share_philhealth', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employer share(PHILHEALTH)')),
                ('employer_share_pag_ibig', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employer share(PAG-IBIG)')),
                ('total_employer', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Total')),
                ('employee_share_sss', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employee share(SSS)')),
                ('employee_share_ec_sss', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employee share EC(SSS)')),
                ('employee_share_philhealth', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employee share(PHILHEALTH)')),
                ('employee_share_pag_ibig', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Employee share(PAG-IBIG)')),
                ('employee_tax', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('total_employee', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True, verbose_name='Total')),
                ('total_share_sss', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('total_share_ec_sss', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('total_share_philhealth', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('total_share_pag_ibig', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('overall_total_share', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7, null=True)),
                ('actual_date_hired', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('date_hired_in_contract', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('category', models.CharField(blank=True, choices=[('Office Based', 'Office Based'), ('Part-timers', 'Part-timers'), ('Home Based', 'Home Based'), ('Freelance', 'Freelance')], max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('username', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='staffs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'List of Staff',
                'verbose_name_plural': 'List of Staffs',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='TrainingUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients')),
            ],
        ),
        migrations.CreateModel(
            name='TypeOfTaskRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_task', models.CharField(blank=True, max_length=150, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients')),
            ],
        ),
        migrations.CreateModel(
            name='WebsiteUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, null=True)),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients')),
            ],
        ),
        migrations.AddField(
            model_name='clientprofiling',
            name='client_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients'),
        ),
        migrations.AddField(
            model_name='channelofcommunications',
            name='name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='users.Clients'),
        ),
    ]
